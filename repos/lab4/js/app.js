//Объявляем экземпляр класса SpeechRecognition
let recognizer = new webkitSpeechRecognition();
//Переменная status используется для того, чтобы определить, запущен ли процесс распознавания речи, булево значение
let status = false;
/**
 * Параметр, который обозначает прозрачность, по умолчанию непрозрачно, далее будет подставляться в свойства кнопки
 * алгоритм будет описан далее, это позволит кнопки "мигать", чтобы было понятно, что процесс распознования речи запущен
 */
let opacity = 1;

// Оператор позволяет определить в какую сторону движется opacity, если -1, то вниз (тускнеет), иначе вверх
let operator = -1;

// Если указать это свойство как true, то будут возвращаться промежуточные результаты, что на мой взгляд удобно для пользователя
recognizer.interimResults = true;
// Этот параметр устанавливает обрабатываемый язык
recognizer.lang = 'ru-Ru';

//Здесь описан процесс "мигания" кнопки, всё помещается в setInterval, что позволяет постоянно обрабатывать описанный внутри код
setInterval(() => {
    //Если status == true, т.е. речь записывается для обработки, то меняем значение прозрачности, минимальный порог 0.3, чтобы кнопка совсем не пропала, максимальный 1
    if(status){
        if(opacity <= 0.3)
            operator = 1;
        if(opacity >= 1)
            operator = -1;

        opacity += 0.01 * operator;
        //Устанавливаем CSS свойство кнопки - opacity
        document.getElementById('listen-button').style.opacity = opacity;
    }
    else //Если процесс распознавания речи не запущен, то делаем кнопку непрозрачной
        document.getElementById('listen-button').style.opacity = 1;
}, 10)


/**
 * onresult - свойство SpeechRecignition интерфейса, является обработчиком события, когда служба распозновния возвращает результат
 * а также промежуточные результаты (флаг выше)
 */
recognizer.onresult = function (event) {
    //В event возвращается обработтаный объект, тут я выводил в консоли, чтобы узнать его структуру
    console.log(event);
    //В result складываем конечный результат, каждый раз возвращается полное предложение с самого начала
    var result = event.results[event.resultIndex];
    //устанавливаем значение для элемента textarea в html и передаем туда полученный текст
    document.getElementById('text').value= result[0].transcript;

    //Флаг isFinal говорит о том, запущен ли процесс распознавания речи, или он уже завершен. Если isFinal == true, это вернулся окончательный результат
    if (result.isFinal) {
        //Устанавливаю статус в false, для того, чтобы кнопка перестала "мигать"
        status = false;
    }
};

//Функция вызывается при нажатии на кнопку
function speech () {
    //Если процесс распознавания речи не был запушен, то запускаем, иначе прерываем, если, например, было повторное нажатие
    if(!status) {
        recognizer.start();
        status = true;
    }
    else{
        recognizer.stop();
        status = false;
    }

}